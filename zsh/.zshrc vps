# ========================================
# === Plugin Manager Setup (Zinit) =======
# ========================================
# âž¤ Verifica se Zinit Ã¨ giÃ  presente, altrimenti lo installa con Homebrew
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
# Carica il plugin manager Zinit
source "${ZINIT_HOME}/zinit.zsh"


# ========================================
# === Environment Configuration ===============
# ========================================
export TERM=xterm-256color

# âž¤ Prompt Starship
eval "$(starship init zsh)"

# âž¤ fzf (interfacce fuzzy per ricerche e cronologia)
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

# âž¤ zoxide (navigazione intelligente tra directory)
eval "$(zoxide init zsh)"


# ========================================
# === Plugin Zsh =========================
# ========================================

# âž¤ Suggerimenti dinamici durante la digitazione
zinit light zsh-users/zsh-autosuggestions
# âž¤ Interfacce Git interattive con fzf
zinit light wfxr/forgit

# âž¤ Completamento automatico con supporto fzf
zinit light Aloxaf/fzf-tab

# âž¤ Evidenziazione sintattica (caricare per ultimo)
zinit light zdharma-continuum/fast-syntax-highlighting


# ========================================
# === SDKMAN! Setup ======================
# ========================================

# âž¤ Installa SDKMAN! se non esiste
if [[ ! -d "$HOME/.sdkman" ]]; then
  echo "ðŸ“¦ Installazione SDKMAN..."
  curl -s "https://get.sdkman.io" | bash
fi

# âž¤ Inizializza SDKMAN!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"

# âž¤ Imposta JAVA_HOME in modo sicuro
if command -v sdk >/dev/null 2>&1; then
  export JAVA_HOME="${SDKMAN_DIR}/candidates/java/current"
fi


# ================================
# === Filen CLI Setup ============
# ================================
# âž¤ Aggiunge il percorso a filen-cli (se esiste)
if [[ -d "$HOME/.filen-cli/bin" ]]; then
  export PATH="$HOME/.filen-cli/bin:$PATH"
fi

# âž¤ Installa filen-cli solo se il comando non Ã¨ disponibile
if ! command -v filen >/dev/null 2>&1; then
  echo "ðŸ“¦ Installazione filen-cli..."
  curl -sL https://filen.io/cli.sh | bash
fi


# ========================================
# === Aliases ============================
# ========================================

# âž¤ Aggiorna tutti i pacchetti Homebrew
alias update-all='sudo apt update && sudo apt upgrade && brew cleanup'


# filen-cli
PATH=$PATH:~/.filen-cli/bin